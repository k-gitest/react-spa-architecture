name: E2E Tests

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set Prisma version
        run: echo "PRISMA_VERSION=6.7.0" >> $GITHUB_ENV

      - name: Cache Prisma client
        uses: actions/cache@v4
        id: prisma-cache
        with:
          path: node_modules/.prisma
          key: prisma-${{ env.PRISMA_VERSION }}-${{ hashFiles('prisma/schema.prisma') }}

      - name: Setup Deno
        if: steps.prisma-cache.outputs.cache-hit != 'true'
        uses: denoland/setup-deno@v1
        with:
          deno-version: '2.2.5'

      - name: Generate Deno Prisma client
        if: steps.prisma-cache.outputs.cache-hit != 'true'
        run: deno run -A --unstable-detect-cjs npm:prisma@6.7.0 generate --no-engine

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install Playwright system dependencies only
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL_TEST }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY_TEST }}

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL_TEST }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY_TEST }}
          PLAYWRIGHT_TEST_EMAIL: ${{ secrets.PLAYWRIGHT_TEST_EMAIL }}
          PLAYWRIGHT_TEST_PASSWORD: ${{ secrets.PLAYWRIGHT_TEST_PASSWORD }}
          MAILTRAP_API_KEY: ${{ secrets.MAILTRAP_API_KEY }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ github.sha }}
          path: playwright-report/
          retention-days: 30

      - name: Upload VRT screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: vrt-screenshots-${{ github.sha }}
          path: test-results/
          retention-days: 30