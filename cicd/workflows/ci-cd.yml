name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      # Node.js (Frontend) - プロジェクトルート想定
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run frontend build
        run: npm run build

      - name: Run frontend unit tests
        run: npm test -- --ci

      # Deno (Edge Functions)
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.2.5

      - name: Run Deno Lint & Test
        run: |
          deno lint
          deno test --allow-all

      # Prisma Migrations
      - name: Prisma generate
        run: npx prisma generate

      - name: Prisma migrate (dev only)
        if: github.ref == 'refs/heads/develop'
        run: npx prisma migrate deploy

      # E2E Test (Playwright)
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start frontend dev server
        run: npm run dev &
      
      - name: Wait for dev server
        run: npx wait-on http://localhost:5173

      - name: Run E2E tests
        run: npx playwright test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Edge Functions のみデプロイ
      - name: Deploy Edge Functions
        run: supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      # DB は Prisma 管理
      - name: Run Prisma migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
