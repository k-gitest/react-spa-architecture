name: CI Pipeline

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref == 'main' && 'production' || 'development' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-environment

      - name: Lint check
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Unit/Integration Tests
        run: npm run test:ci
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Deno lint and test
        working-directory: ./supabase/functions
        run: |
          deno lint
          deno test --allow-all

      - name: Build Application
        uses: ./.github/actions/build-app
        with:
          supabase-url: ${{ secrets.VITE_SUPABASE_URL }}
          supabase-anon-key: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

  database:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-environment

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}